# Remap C-b to C-space
# unbind-key C-b
# set -g prefix C-space
# bind-key C-Space send-prefix

# Start from 1 instead of 0.
set -g base-index 1
set -g pane-base-index 1

# Automatically rename windows.
set-option -g allow-rename off
set-option -g set-titles on
# Re-number windows when window is closed
set-window-option -g renumber-windows on

# Turn off annoying stuff.
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",$TERM:RGB"
# set -ga terminal-overrides ",*256col*:Tc"
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[q'
set-environment -g COLORTERM "truecolor"

set -g status-keys emacs
set -g history-limit 10000

# Navigate in copy-mode using vim keys
setw -g mode-keys vi

setw -g mouse on
setw -g monitor-activity on

# Open files
# bind ` new-session -A -s todo "cd ~/todo && nvim -O backlog.md doing.md done.md"
bind Space display-menu -T "#[align=centre]Open Shortcut" -x M -y M \
    'todo     ' 1 'new-session -A -s todo "cd ~/todo && nvim -O backlog.md doing.md done.md"' \
    'scratch' 2 'new-session -A -s scratch' \
    -test 3 'new-session -A -s test "nvim test.txt"'
    # 'scratch' 2 'display-popup -E -h 75% -w 75% -x 100% "tmux new-session -A -s scratch"' \

# Session switcher (requries fzf)
# bind \\ new-window -n "session-switcher" "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind \\ display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
unbind w
bind W choose-tree -Zw # Everything closed
bind w choose-tree -Zsw # Everything closed

unbind ?
bind ? list-keys -a

# Join a marked pane with same letters as split 
bind V join-pane -h
bind S join-pane -v

bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'

bind X confirm -p "Do you want to kill this window? (y/n)" "kill-window"

bind Tab switch-client -l

# Switch windows same as vim switch buffers.
unbind [
unbind ]
unbind \{
unbind \}
bind -r [ previous-window
bind -r ] next-window
bind -r \} switch-client -p
bind -r \{ switch-client -n

unbind p
bind p choose-buffer -Z
unbind =
bind = display-menu -T "#[align=centre]Pane Layout" -x M -y M \
    'even-horizontal' h 'select-layout even-horizontal' \
    'even-vertical' j 'select-layout even-vertical' \
    'main-horizontal' k 'select-layout main-horizontal' \
    'main-vertical' l 'select-layout main-vertical'
bind C command-prompt -I "" "new -s '%%'"

unbind r
# Rename 
bind r command-prompt -I "" "rename-window -- '%%'"
bind R command-prompt -I "" "rename-session -- '%%'"

# Enter copy-mode using same keybind as alacritty
bind-key -n C-Escape copy-mode

bind Escape copy-mode
bind -n Pageup copy-mode -u

# -r makes it repeatable (such as C-b C-hhhh)
# -n is same as -T root, it will execute without having to use bind-key
#       Ex: if you bind c using -n, using the plain c key will execute instead of <bind-key> c
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

# bind -r C-h select-pane -L
# bind -r C-j select-pane -D
# bind -r C-k select-pane -U
# bind -r C-l select-pane -R
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind -r H swap-pane -s '{left-of}'
bind -r J swap-pane -s '{down-of}'
bind -r K swap-pane -s '{up-of}'
bind -r L swap-pane -s '{right-of}'

bind z swap-pane

# Toggle full screen.
bind Z resize-pane -Z

# No delay for escape key press.
set -sg escape-time 20

# Reload tmux config.
bind * source-file ~/.tmux.conf

# Attach to the current directory so every new pane/window uses this dir.
bind a attach-session -c "#{pane_current_path}"\; display-message -d 0 "Changed session dir to #{pane_current_path}"

# Fix pane scrolling to end when selecting text with mouse
unbind -T copy-mode-vi MouseDragEnd1Pane
# yank with y when text is selected
bind-key -T copy-mode-vi y send-keys -X copy-selection

set -g @t-fzf-prompt '  '
set -g @t-bind "t"

# Theme.
# set -g status-bg black
# set -g status-fg white
set-option -g status-style bg=default,fg=white
set -g window-status-style bg=default,fg=cyan
set -g window-status-format "#[fg=#cad3f5,bg=#373b58] #I #[fg=#cad3f5,bg=#1e2030] #W#{?window_zoomed_flag, 󰁌 ,} "
set -g window-status-current-style bg=cyan,fg=black
set -g window-status-current-format "#[fg=#1e2030,bg=#a7c080] #I #[fg=#cad3f5,bg=#1e2030] #W#{?window_zoomed_flag, 󰁌 ,} "
set -g pane-border-style fg=white,bg=black
set -g pane-active-border-style fg=white,bg=black
set -g status-interval 60
set -g status-left-length 30
set -g status-left ""
set -g status-right "#[bg=#373b58,fg=#cad3f5]#{?client_prefix,#[bg=#dbbc7f]#[fg=#1e2030],} 󱂬  #[fg=#cad3f5,bg=#1e2030] #S "

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
run '~/.tmux/plugins/tpm/tpm'
